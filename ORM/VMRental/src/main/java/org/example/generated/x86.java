///**
// * Autogenerated by Avro
// *
// * DO NOT EDIT DIRECTLY
// */
//package org.example.generated;
//
//import org.apache.avro.message.BinaryMessageDecoder;
//import org.apache.avro.message.BinaryMessageEncoder;
//import org.apache.avro.message.SchemaStore;
//import org.apache.avro.specific.SpecificData;
//
//@org.apache.avro.specific.AvroGenerated
//public class x86 extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
//  private static final long serialVersionUID = -4580456531719190727L;
//
//
//  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"x86\",\"namespace\":\"org.example.generated\",\"fields\":[{\"name\":\"entityId\",\"type\":{\"type\":\"string\",\"logicalType\":\"uuid\"}},{\"name\":\"CPUNumber\",\"type\":\"int\"},{\"name\":\"ramSize\",\"type\":\"string\"},{\"name\":\"isRented\",\"type\":\"int\"},{\"name\":\"actualRentalPrice\",\"type\":\"float\"},{\"name\":\"CPUManufacturer\",\"type\":\"string\"}]}");
//  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
//
//  private static final SpecificData MODEL$ = new SpecificData();
//  static {
//    MODEL$.addLogicalTypeConversion(new org.apache.avro.Conversions.UUIDConversion());
//  }
//
//  private static final BinaryMessageEncoder<x86> ENCODER =
//      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);
//
//  private static final BinaryMessageDecoder<x86> DECODER =
//      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);
//
//  /**
//   * Return the BinaryMessageEncoder instance used by this class.
//   * @return the message encoder used by this class
//   */
//  public static BinaryMessageEncoder<x86> getEncoder() {
//    return ENCODER;
//  }
//
//  /**
//   * Return the BinaryMessageDecoder instance used by this class.
//   * @return the message decoder used by this class
//   */
//  public static BinaryMessageDecoder<x86> getDecoder() {
//    return DECODER;
//  }
//
//  /**
//   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
//   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
//   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
//   */
//  public static BinaryMessageDecoder<x86> createDecoder(SchemaStore resolver) {
//    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
//  }
//
//  /**
//   * Serializes this x86 to a ByteBuffer.
//   * @return a buffer holding the serialized data for this instance
//   * @throws java.io.IOException if this instance could not be serialized
//   */
//  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
//    return ENCODER.encode(this);
//  }
//
//  /**
//   * Deserializes a x86 from a ByteBuffer.
//   * @param b a byte buffer holding serialized data for an instance of this class
//   * @return a x86 instance decoded from the given buffer
//   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
//   */
//  public static x86 fromByteBuffer(
//      java.nio.ByteBuffer b) throws java.io.IOException {
//    return DECODER.decode(b);
//  }
//
//  private java.util.UUID entityId;
//  private int CPUNumber;
//  private CharSequence ramSize;
//  private int isRented;
//  private float actualRentalPrice;
//  private CharSequence CPUManufacturer;
//
//  /**
//   * Default constructor.  Note that this does not initialize fields
//   * to their default values from the schema.  If that is desired then
//   * one should use <code>newBuilder()</code>.
//   */
//  public x86() {}
//
//  /**
//   * All-args constructor.
//   * @param entityId The new value for entityId
//   * @param CPUNumber The new value for CPUNumber
//   * @param ramSize The new value for ramSize
//   * @param isRented The new value for isRented
//   * @param actualRentalPrice The new value for actualRentalPrice
//   * @param CPUManufacturer The new value for CPUManufacturer
//   */
//  public x86(java.util.UUID entityId, Integer CPUNumber, CharSequence ramSize, Integer isRented, Float actualRentalPrice, CharSequence CPUManufacturer) {
//    this.entityId = entityId;
//    this.CPUNumber = CPUNumber;
//    this.ramSize = ramSize;
//    this.isRented = isRented;
//    this.actualRentalPrice = actualRentalPrice;
//    this.CPUManufacturer = CPUManufacturer;
//  }
//
//
//  public SpecificData getSpecificData() { return MODEL$; }
//
//  @Override
//  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
//
//  // Used by DatumWriter.  Applications should not call.
//  @Override
//  public Object get(int field$) {
//    switch (field$) {
//    case 0: return entityId;
//    case 1: return CPUNumber;
//    case 2: return ramSize;
//    case 3: return isRented;
//    case 4: return actualRentalPrice;
//    case 5: return CPUManufacturer;
//    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
//    }
//  }
//
//  private static final org.apache.avro.Conversion<?>[] conversions =
//      new org.apache.avro.Conversion<?>[] {
//      new org.apache.avro.Conversions.UUIDConversion(),
//      null,
//      null,
//      null,
//      null,
//      null,
//      null
//  };
//
//  @Override
//  public org.apache.avro.Conversion<?> getConversion(int field) {
//    return conversions[field];
//  }
//
//  // Used by DatumReader.  Applications should not call.
//  @Override
//  @SuppressWarnings(value="unchecked")
//  public void put(int field$, Object value$) {
//    switch (field$) {
//    case 0: entityId = (java.util.UUID)value$; break;
//    case 1: CPUNumber = (Integer)value$; break;
//    case 2: ramSize = (CharSequence)value$; break;
//    case 3: isRented = (Integer)value$; break;
//    case 4: actualRentalPrice = (Float)value$; break;
//    case 5: CPUManufacturer = (CharSequence)value$; break;
//    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
//    }
//  }
//
//  /**
//   * Gets the value of the 'entityId' field.
//   * @return The value of the 'entityId' field.
//   */
//  public java.util.UUID getEntityId() {
//    return entityId;
//  }
//
//
//  /**
//   * Sets the value of the 'entityId' field.
//   * @param value the value to set.
//   */
//  public void setEntityId(java.util.UUID value) {
//    this.entityId = value;
//  }
//
//  /**
//   * Gets the value of the 'CPUNumber' field.
//   * @return The value of the 'CPUNumber' field.
//   */
//  public int getCPUNumber() {
//    return CPUNumber;
//  }
//
//
//  /**
//   * Sets the value of the 'CPUNumber' field.
//   * @param value the value to set.
//   */
//  public void setCPUNumber(int value) {
//    this.CPUNumber = value;
//  }
//
//  /**
//   * Gets the value of the 'ramSize' field.
//   * @return The value of the 'ramSize' field.
//   */
//  public CharSequence getRamSize() {
//    return ramSize;
//  }
//
//
//  /**
//   * Sets the value of the 'ramSize' field.
//   * @param value the value to set.
//   */
//  public void setRamSize(CharSequence value) {
//    this.ramSize = value;
//  }
//
//  /**
//   * Gets the value of the 'isRented' field.
//   * @return The value of the 'isRented' field.
//   */
//  public int getIsRented() {
//    return isRented;
//  }
//
//
//  /**
//   * Sets the value of the 'isRented' field.
//   * @param value the value to set.
//   */
//  public void setIsRented(int value) {
//    this.isRented = value;
//  }
//
//  /**
//   * Gets the value of the 'actualRentalPrice' field.
//   * @return The value of the 'actualRentalPrice' field.
//   */
//  public float getActualRentalPrice() {
//    return actualRentalPrice;
//  }
//
//
//  /**
//   * Sets the value of the 'actualRentalPrice' field.
//   * @param value the value to set.
//   */
//  public void setActualRentalPrice(float value) {
//    this.actualRentalPrice = value;
//  }
//
//  /**
//   * Gets the value of the 'CPUManufacturer' field.
//   * @return The value of the 'CPUManufacturer' field.
//   */
//  public CharSequence getCPUManufacturer() {
//    return CPUManufacturer;
//  }
//
//
//  /**
//   * Sets the value of the 'CPUManufacturer' field.
//   * @param value the value to set.
//   */
//  public void setCPUManufacturer(CharSequence value) {
//    this.CPUManufacturer = value;
//  }
//
//  /**
//   * Creates a new x86 RecordBuilder.
//   * @return A new x86 RecordBuilder
//   */
//  public static Builder newBuilder() {
//    return new Builder();
//  }
//
//  /**
//   * Creates a new x86 RecordBuilder by copying an existing Builder.
//   * @param other The existing builder to copy.
//   * @return A new x86 RecordBuilder
//   */
//  public static Builder newBuilder(Builder other) {
//    if (other == null) {
//      return new Builder();
//    } else {
//      return new Builder(other);
//    }
//  }
//
//  /**
//   * Creates a new x86 RecordBuilder by copying an existing x86 instance.
//   * @param other The existing instance to copy.
//   * @return A new x86 RecordBuilder
//   */
//  public static Builder newBuilder(x86 other) {
//    if (other == null) {
//      return new Builder();
//    } else {
//      return new Builder(other);
//    }
//  }
//
//  /**
//   * RecordBuilder for x86 instances.
//   */
//  @org.apache.avro.specific.AvroGenerated
//  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<x86>
//    implements org.apache.avro.data.RecordBuilder<x86> {
//
//    private java.util.UUID entityId;
//    private int CPUNumber;
//    private CharSequence ramSize;
//    private int isRented;
//    private float actualRentalPrice;
//    private CharSequence CPUManufacturer;
//
//    /** Creates a new Builder */
//    private Builder() {
//      super(SCHEMA$);
//    }
//
//    /**
//     * Creates a Builder by copying an existing Builder.
//     * @param other The existing Builder to copy.
//     */
//    private Builder(Builder other) {
//      super(other);
//      if (isValidValue(fields()[0], other.entityId)) {
//        this.entityId = data().deepCopy(fields()[0].schema(), other.entityId);
//        fieldSetFlags()[0] = other.fieldSetFlags()[0];
//      }
//      if (isValidValue(fields()[1], other.CPUNumber)) {
//        this.CPUNumber = data().deepCopy(fields()[1].schema(), other.CPUNumber);
//        fieldSetFlags()[1] = other.fieldSetFlags()[1];
//      }
//      if (isValidValue(fields()[2], other.ramSize)) {
//        this.ramSize = data().deepCopy(fields()[2].schema(), other.ramSize);
//        fieldSetFlags()[2] = other.fieldSetFlags()[2];
//      }
//      if (isValidValue(fields()[3], other.isRented)) {
//        this.isRented = data().deepCopy(fields()[3].schema(), other.isRented);
//        fieldSetFlags()[3] = other.fieldSetFlags()[3];
//      }
//      if (isValidValue(fields()[4], other.actualRentalPrice)) {
//        this.actualRentalPrice = data().deepCopy(fields()[4].schema(), other.actualRentalPrice);
//        fieldSetFlags()[4] = other.fieldSetFlags()[4];
//      }
//      if (isValidValue(fields()[5], other.CPUManufacturer)) {
//        this.CPUManufacturer = data().deepCopy(fields()[5].schema(), other.CPUManufacturer);
//        fieldSetFlags()[5] = other.fieldSetFlags()[5];
//      }
//    }
//
//    /**
//     * Creates a Builder by copying an existing x86 instance
//     * @param other The existing instance to copy.
//     */
//    private Builder(x86 other) {
//      super(SCHEMA$);
//      if (isValidValue(fields()[0], other.entityId)) {
//        this.entityId = data().deepCopy(fields()[0].schema(), other.entityId);
//        fieldSetFlags()[0] = true;
//      }
//      if (isValidValue(fields()[1], other.CPUNumber)) {
//        this.CPUNumber = data().deepCopy(fields()[1].schema(), other.CPUNumber);
//        fieldSetFlags()[1] = true;
//      }
//      if (isValidValue(fields()[2], other.ramSize)) {
//        this.ramSize = data().deepCopy(fields()[2].schema(), other.ramSize);
//        fieldSetFlags()[2] = true;
//      }
//      if (isValidValue(fields()[3], other.isRented)) {
//        this.isRented = data().deepCopy(fields()[3].schema(), other.isRented);
//        fieldSetFlags()[3] = true;
//      }
//      if (isValidValue(fields()[4], other.actualRentalPrice)) {
//        this.actualRentalPrice = data().deepCopy(fields()[4].schema(), other.actualRentalPrice);
//        fieldSetFlags()[4] = true;
//      }
//      if (isValidValue(fields()[5], other.CPUManufacturer)) {
//        this.CPUManufacturer = data().deepCopy(fields()[5].schema(), other.CPUManufacturer);
//        fieldSetFlags()[5] = true;
//      }
//    }
//
//    /**
//      * Gets the value of the 'entityId' field.
//      * @return The value.
//      */
//    public java.util.UUID getEntityId() {
//      return entityId;
//    }
//
//
//    /**
//      * Sets the value of the 'entityId' field.
//      * @param value The value of 'entityId'.
//      * @return This builder.
//      */
//    public Builder setEntityId(java.util.UUID value) {
//      validate(fields()[0], value);
//      this.entityId = value;
//      fieldSetFlags()[0] = true;
//      return this;
//    }
//
//    /**
//      * Checks whether the 'entityId' field has been set.
//      * @return True if the 'entityId' field has been set, false otherwise.
//      */
//    public boolean hasEntityId() {
//      return fieldSetFlags()[0];
//    }
//
//
//    /**
//      * Clears the value of the 'entityId' field.
//      * @return This builder.
//      */
//    public Builder clearEntityId() {
//      entityId = null;
//      fieldSetFlags()[0] = false;
//      return this;
//    }
//
//    /**
//      * Gets the value of the 'CPUNumber' field.
//      * @return The value.
//      */
//    public int getCPUNumber() {
//      return CPUNumber;
//    }
//
//
//    /**
//      * Sets the value of the 'CPUNumber' field.
//      * @param value The value of 'CPUNumber'.
//      * @return This builder.
//      */
//    public Builder setCPUNumber(int value) {
//      validate(fields()[1], value);
//      this.CPUNumber = value;
//      fieldSetFlags()[1] = true;
//      return this;
//    }
//
//    /**
//      * Checks whether the 'CPUNumber' field has been set.
//      * @return True if the 'CPUNumber' field has been set, false otherwise.
//      */
//    public boolean hasCPUNumber() {
//      return fieldSetFlags()[1];
//    }
//
//
//    /**
//      * Clears the value of the 'CPUNumber' field.
//      * @return This builder.
//      */
//    public Builder clearCPUNumber() {
//      fieldSetFlags()[1] = false;
//      return this;
//    }
//
//    /**
//      * Gets the value of the 'ramSize' field.
//      * @return The value.
//      */
//    public CharSequence getRamSize() {
//      return ramSize;
//    }
//
//
//    /**
//      * Sets the value of the 'ramSize' field.
//      * @param value The value of 'ramSize'.
//      * @return This builder.
//      */
//    public Builder setRamSize(CharSequence value) {
//      validate(fields()[2], value);
//      this.ramSize = value;
//      fieldSetFlags()[2] = true;
//      return this;
//    }
//
//    /**
//      * Checks whether the 'ramSize' field has been set.
//      * @return True if the 'ramSize' field has been set, false otherwise.
//      */
//    public boolean hasRamSize() {
//      return fieldSetFlags()[2];
//    }
//
//
//    /**
//      * Clears the value of the 'ramSize' field.
//      * @return This builder.
//      */
//    public Builder clearRamSize() {
//      ramSize = null;
//      fieldSetFlags()[2] = false;
//      return this;
//    }
//
//    /**
//      * Gets the value of the 'isRented' field.
//      * @return The value.
//      */
//    public int getIsRented() {
//      return isRented;
//    }
//
//
//    /**
//      * Sets the value of the 'isRented' field.
//      * @param value The value of 'isRented'.
//      * @return This builder.
//      */
//    public Builder setIsRented(int value) {
//      validate(fields()[3], value);
//      this.isRented = value;
//      fieldSetFlags()[3] = true;
//      return this;
//    }
//
//    /**
//      * Checks whether the 'isRented' field has been set.
//      * @return True if the 'isRented' field has been set, false otherwise.
//      */
//    public boolean hasIsRented() {
//      return fieldSetFlags()[3];
//    }
//
//
//    /**
//      * Clears the value of the 'isRented' field.
//      * @return This builder.
//      */
//    public Builder clearIsRented() {
//      fieldSetFlags()[3] = false;
//      return this;
//    }
//
//    /**
//      * Gets the value of the 'actualRentalPrice' field.
//      * @return The value.
//      */
//    public float getActualRentalPrice() {
//      return actualRentalPrice;
//    }
//
//
//    /**
//      * Sets the value of the 'actualRentalPrice' field.
//      * @param value The value of 'actualRentalPrice'.
//      * @return This builder.
//      */
//    public Builder setActualRentalPrice(float value) {
//      validate(fields()[4], value);
//      this.actualRentalPrice = value;
//      fieldSetFlags()[4] = true;
//      return this;
//    }
//
//    /**
//      * Checks whether the 'actualRentalPrice' field has been set.
//      * @return True if the 'actualRentalPrice' field has been set, false otherwise.
//      */
//    public boolean hasActualRentalPrice() {
//      return fieldSetFlags()[4];
//    }
//
//
//    /**
//      * Clears the value of the 'actualRentalPrice' field.
//      * @return This builder.
//      */
//    public Builder clearActualRentalPrice() {
//      fieldSetFlags()[4] = false;
//      return this;
//    }
//
//    /**
//      * Gets the value of the 'CPUManufacturer' field.
//      * @return The value.
//      */
//    public CharSequence getCPUManufacturer() {
//      return CPUManufacturer;
//    }
//
//
//    /**
//      * Sets the value of the 'CPUManufacturer' field.
//      * @param value The value of 'CPUManufacturer'.
//      * @return This builder.
//      */
//    public Builder setCPUManufacturer(CharSequence value) {
//      validate(fields()[5], value);
//      this.CPUManufacturer = value;
//      fieldSetFlags()[5] = true;
//      return this;
//    }
//
//    /**
//      * Checks whether the 'CPUManufacturer' field has been set.
//      * @return True if the 'CPUManufacturer' field has been set, false otherwise.
//      */
//    public boolean hasCPUManufacturer() {
//      return fieldSetFlags()[5];
//    }
//
//
//    /**
//      * Clears the value of the 'CPUManufacturer' field.
//      * @return This builder.
//      */
//    public Builder clearCPUManufacturer() {
//      CPUManufacturer = null;
//      fieldSetFlags()[5] = false;
//      return this;
//    }
//
//    @Override
//    @SuppressWarnings("unchecked")
//    public x86 build() {
//      try {
//        x86 record = new x86();
//        record.entityId = fieldSetFlags()[0] ? this.entityId : (java.util.UUID) defaultValue(fields()[0]);
//        record.CPUNumber = fieldSetFlags()[1] ? this.CPUNumber : (Integer) defaultValue(fields()[1]);
//        record.ramSize = fieldSetFlags()[2] ? this.ramSize : (CharSequence) defaultValue(fields()[2]);
//        record.isRented = fieldSetFlags()[3] ? this.isRented : (Integer) defaultValue(fields()[3]);
//        record.actualRentalPrice = fieldSetFlags()[4] ? this.actualRentalPrice : (Float) defaultValue(fields()[4]);
//        record.CPUManufacturer = fieldSetFlags()[5] ? this.CPUManufacturer : (CharSequence) defaultValue(fields()[5]);
//        return record;
//      } catch (org.apache.avro.AvroMissingFieldException e) {
//        throw e;
//      } catch (Exception e) {
//        throw new org.apache.avro.AvroRuntimeException(e);
//      }
//    }
//  }
//
//  @SuppressWarnings("unchecked")
//  private static final org.apache.avro.io.DatumWriter<x86>
//    WRITER$ = (org.apache.avro.io.DatumWriter<x86>)MODEL$.createDatumWriter(SCHEMA$);
//
//  @Override public void writeExternal(java.io.ObjectOutput out)
//    throws java.io.IOException {
//    WRITER$.write(this, SpecificData.getEncoder(out));
//  }
//
//  @SuppressWarnings("unchecked")
//  private static final org.apache.avro.io.DatumReader<x86>
//    READER$ = (org.apache.avro.io.DatumReader<x86>)MODEL$.createDatumReader(SCHEMA$);
//
//  @Override public void readExternal(java.io.ObjectInput in)
//    throws java.io.IOException {
//    READER$.read(this, SpecificData.getDecoder(in));
//  }
//
//}
//
//
//
//
//
//
//
//
//
//
