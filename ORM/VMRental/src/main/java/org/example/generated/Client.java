///**
// * Autogenerated by Avro
// *
// * DO NOT EDIT DIRECTLY
// */
//package org.example.generated;
//
//import org.apache.avro.message.BinaryMessageDecoder;
//import org.apache.avro.message.BinaryMessageEncoder;
//import org.apache.avro.message.SchemaStore;
//import org.apache.avro.specific.SpecificData;
//
//@org.apache.avro.specific.AvroGenerated
//public class Client extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
//  private static final long serialVersionUID = -2060495427794768523L;
//
//
//  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Client\",\"namespace\":\"org.example.generated\",\"fields\":[{\"name\":\"entityId\",\"type\":{\"type\":\"string\",\"logicalType\":\"uuid\"}},{\"name\":\"firstName\",\"type\":\"string\"},{\"name\":\"surname\",\"type\":\"string\"},{\"name\":\"emailAddress\",\"type\":\"string\"},{\"name\":\"clientType\",\"type\":[{\"type\":\"record\",\"name\":\"Standard\",\"fields\":[{\"name\":\"entityId\",\"type\":{\"type\":\"string\",\"logicalType\":\"uuid\"}},{\"name\":\"maxRentedMachines\",\"type\":\"int\"},{\"name\":\"name\",\"type\":\"string\"}]},{\"type\":\"record\",\"name\":\"Admin\",\"fields\":[{\"name\":\"entityId\",\"type\":{\"type\":\"string\",\"logicalType\":\"uuid\"}},{\"name\":\"maxRentedMachines\",\"type\":\"int\"},{\"name\":\"name\",\"type\":\"string\"}]}]},{\"name\":\"currentRents\",\"type\":\"int\"}]}");
//  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
//
//  private static final SpecificData MODEL$ = new SpecificData();
//  static {
//    MODEL$.addLogicalTypeConversion(new org.apache.avro.Conversions.UUIDConversion());
//  }
//
//  private static final BinaryMessageEncoder<Client> ENCODER =
//      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);
//
//  private static final BinaryMessageDecoder<Client> DECODER =
//      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);
//
//  /**
//   * Return the BinaryMessageEncoder instance used by this class.
//   * @return the message encoder used by this class
//   */
//  public static BinaryMessageEncoder<Client> getEncoder() {
//    return ENCODER;
//  }
//
//  /**
//   * Return the BinaryMessageDecoder instance used by this class.
//   * @return the message decoder used by this class
//   */
//  public static BinaryMessageDecoder<Client> getDecoder() {
//    return DECODER;
//  }
//
//  /**
//   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
//   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
//   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
//   */
//  public static BinaryMessageDecoder<Client> createDecoder(SchemaStore resolver) {
//    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
//  }
//
//  /**
//   * Serializes this Client to a ByteBuffer.
//   * @return a buffer holding the serialized data for this instance
//   * @throws java.io.IOException if this instance could not be serialized
//   */
//  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
//    return ENCODER.encode(this);
//  }
//
//  /**
//   * Deserializes a Client from a ByteBuffer.
//   * @param b a byte buffer holding serialized data for an instance of this class
//   * @return a Client instance decoded from the given buffer
//   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
//   */
//  public static Client fromByteBuffer(
//      java.nio.ByteBuffer b) throws java.io.IOException {
//    return DECODER.decode(b);
//  }
//
//  private java.util.UUID entityId;
//  private CharSequence firstName;
//  private CharSequence surname;
//  private CharSequence emailAddress;
//  private Object clientType;
//  private int currentRents;
//
//  /**
//   * Default constructor.  Note that this does not initialize fields
//   * to their default values from the schema.  If that is desired then
//   * one should use <code>newBuilder()</code>.
//   */
//  public Client() {}
//
//  /**
//   * All-args constructor.
//   * @param entityId The new value for entityId
//   * @param firstName The new value for firstName
//   * @param surname The new value for surname
//   * @param emailAddress The new value for emailAddress
//   * @param clientType The new value for clientType
//   * @param currentRents The new value for currentRents
//   */
//  public Client(java.util.UUID entityId, CharSequence firstName, CharSequence surname, CharSequence emailAddress, Object clientType, Integer currentRents) {
//    this.entityId = entityId;
//    this.firstName = firstName;
//    this.surname = surname;
//    this.emailAddress = emailAddress;
//    this.clientType = clientType;
//    this.currentRents = currentRents;
//  }
//
//
//  public SpecificData getSpecificData() { return MODEL$; }
//
//  @Override
//  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
//
//  // Used by DatumWriter.  Applications should not call.
//  @Override
//  public Object get(int field$) {
//    switch (field$) {
//    case 0: return entityId;
//    case 1: return firstName;
//    case 2: return surname;
//    case 3: return emailAddress;
//    case 4: return clientType;
//    case 5: return currentRents;
//    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
//    }
//  }
//
//  private static final org.apache.avro.Conversion<?>[] conversions =
//      new org.apache.avro.Conversion<?>[] {
//      new org.apache.avro.Conversions.UUIDConversion(),
//      null,
//      null,
//      null,
//      null,
//      null,
//      null
//  };
//
//  @Override
//  public org.apache.avro.Conversion<?> getConversion(int field) {
//    return conversions[field];
//  }
//
//  // Used by DatumReader.  Applications should not call.
//  @Override
//  @SuppressWarnings(value="unchecked")
//  public void put(int field$, Object value$) {
//    switch (field$) {
//    case 0: entityId = (java.util.UUID)value$; break;
//    case 1: firstName = (CharSequence)value$; break;
//    case 2: surname = (CharSequence)value$; break;
//    case 3: emailAddress = (CharSequence)value$; break;
//    case 4: clientType = value$; break;
//    case 5: currentRents = (Integer)value$; break;
//    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
//    }
//  }
//
//  /**
//   * Gets the value of the 'entityId' field.
//   * @return The value of the 'entityId' field.
//   */
//  public java.util.UUID getEntityId() {
//    return entityId;
//  }
//
//
//  /**
//   * Sets the value of the 'entityId' field.
//   * @param value the value to set.
//   */
//  public void setEntityId(java.util.UUID value) {
//    this.entityId = value;
//  }
//
//  /**
//   * Gets the value of the 'firstName' field.
//   * @return The value of the 'firstName' field.
//   */
//  public CharSequence getFirstName() {
//    return firstName;
//  }
//
//
//  /**
//   * Sets the value of the 'firstName' field.
//   * @param value the value to set.
//   */
//  public void setFirstName(CharSequence value) {
//    this.firstName = value;
//  }
//
//  /**
//   * Gets the value of the 'surname' field.
//   * @return The value of the 'surname' field.
//   */
//  public CharSequence getSurname() {
//    return surname;
//  }
//
//
//  /**
//   * Sets the value of the 'surname' field.
//   * @param value the value to set.
//   */
//  public void setSurname(CharSequence value) {
//    this.surname = value;
//  }
//
//  /**
//   * Gets the value of the 'emailAddress' field.
//   * @return The value of the 'emailAddress' field.
//   */
//  public CharSequence getEmailAddress() {
//    return emailAddress;
//  }
//
//
//  /**
//   * Sets the value of the 'emailAddress' field.
//   * @param value the value to set.
//   */
//  public void setEmailAddress(CharSequence value) {
//    this.emailAddress = value;
//  }
//
//  /**
//   * Gets the value of the 'clientType' field.
//   * @return The value of the 'clientType' field.
//   */
//  public Object getClientType() {
//    return clientType;
//  }
//
//
//  /**
//   * Sets the value of the 'clientType' field.
//   * @param value the value to set.
//   */
//  public void setClientType(Object value) {
//    this.clientType = value;
//  }
//
//  /**
//   * Gets the value of the 'currentRents' field.
//   * @return The value of the 'currentRents' field.
//   */
//  public int getCurrentRents() {
//    return currentRents;
//  }
//
//
//  /**
//   * Sets the value of the 'currentRents' field.
//   * @param value the value to set.
//   */
//  public void setCurrentRents(int value) {
//    this.currentRents = value;
//  }
//
//  /**
//   * Creates a new Client RecordBuilder.
//   * @return A new Client RecordBuilder
//   */
//  public static Builder newBuilder() {
//    return new Builder();
//  }
//
//  /**
//   * Creates a new Client RecordBuilder by copying an existing Builder.
//   * @param other The existing builder to copy.
//   * @return A new Client RecordBuilder
//   */
//  public static Builder newBuilder(Builder other) {
//    if (other == null) {
//      return new Builder();
//    } else {
//      return new Builder(other);
//    }
//  }
//
//  /**
//   * Creates a new Client RecordBuilder by copying an existing Client instance.
//   * @param other The existing instance to copy.
//   * @return A new Client RecordBuilder
//   */
//  public static Builder newBuilder(Client other) {
//    if (other == null) {
//      return new Builder();
//    } else {
//      return new Builder(other);
//    }
//  }
//
//  /**
//   * RecordBuilder for Client instances.
//   */
//  @org.apache.avro.specific.AvroGenerated
//  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Client>
//    implements org.apache.avro.data.RecordBuilder<Client> {
//
//    private java.util.UUID entityId;
//    private CharSequence firstName;
//    private CharSequence surname;
//    private CharSequence emailAddress;
//    private Object clientType;
//    private int currentRents;
//
//    /** Creates a new Builder */
//    private Builder() {
//      super(SCHEMA$);
//    }
//
//    /**
//     * Creates a Builder by copying an existing Builder.
//     * @param other The existing Builder to copy.
//     */
//    private Builder(Builder other) {
//      super(other);
//      if (isValidValue(fields()[0], other.entityId)) {
//        this.entityId = data().deepCopy(fields()[0].schema(), other.entityId);
//        fieldSetFlags()[0] = other.fieldSetFlags()[0];
//      }
//      if (isValidValue(fields()[1], other.firstName)) {
//        this.firstName = data().deepCopy(fields()[1].schema(), other.firstName);
//        fieldSetFlags()[1] = other.fieldSetFlags()[1];
//      }
//      if (isValidValue(fields()[2], other.surname)) {
//        this.surname = data().deepCopy(fields()[2].schema(), other.surname);
//        fieldSetFlags()[2] = other.fieldSetFlags()[2];
//      }
//      if (isValidValue(fields()[3], other.emailAddress)) {
//        this.emailAddress = data().deepCopy(fields()[3].schema(), other.emailAddress);
//        fieldSetFlags()[3] = other.fieldSetFlags()[3];
//      }
//      if (isValidValue(fields()[4], other.clientType)) {
//        this.clientType = data().deepCopy(fields()[4].schema(), other.clientType);
//        fieldSetFlags()[4] = other.fieldSetFlags()[4];
//      }
//      if (isValidValue(fields()[5], other.currentRents)) {
//        this.currentRents = data().deepCopy(fields()[5].schema(), other.currentRents);
//        fieldSetFlags()[5] = other.fieldSetFlags()[5];
//      }
//    }
//
//    /**
//     * Creates a Builder by copying an existing Client instance
//     * @param other The existing instance to copy.
//     */
//    private Builder(Client other) {
//      super(SCHEMA$);
//      if (isValidValue(fields()[0], other.entityId)) {
//        this.entityId = data().deepCopy(fields()[0].schema(), other.entityId);
//        fieldSetFlags()[0] = true;
//      }
//      if (isValidValue(fields()[1], other.firstName)) {
//        this.firstName = data().deepCopy(fields()[1].schema(), other.firstName);
//        fieldSetFlags()[1] = true;
//      }
//      if (isValidValue(fields()[2], other.surname)) {
//        this.surname = data().deepCopy(fields()[2].schema(), other.surname);
//        fieldSetFlags()[2] = true;
//      }
//      if (isValidValue(fields()[3], other.emailAddress)) {
//        this.emailAddress = data().deepCopy(fields()[3].schema(), other.emailAddress);
//        fieldSetFlags()[3] = true;
//      }
//      if (isValidValue(fields()[4], other.clientType)) {
//        this.clientType = data().deepCopy(fields()[4].schema(), other.clientType);
//        fieldSetFlags()[4] = true;
//      }
//      if (isValidValue(fields()[5], other.currentRents)) {
//        this.currentRents = data().deepCopy(fields()[5].schema(), other.currentRents);
//        fieldSetFlags()[5] = true;
//      }
//    }
//
//    /**
//      * Gets the value of the 'entityId' field.
//      * @return The value.
//      */
//    public java.util.UUID getEntityId() {
//      return entityId;
//    }
//
//
//    /**
//      * Sets the value of the 'entityId' field.
//      * @param value The value of 'entityId'.
//      * @return This builder.
//      */
//    public Builder setEntityId(java.util.UUID value) {
//      validate(fields()[0], value);
//      this.entityId = value;
//      fieldSetFlags()[0] = true;
//      return this;
//    }
//
//    /**
//      * Checks whether the 'entityId' field has been set.
//      * @return True if the 'entityId' field has been set, false otherwise.
//      */
//    public boolean hasEntityId() {
//      return fieldSetFlags()[0];
//    }
//
//
//    /**
//      * Clears the value of the 'entityId' field.
//      * @return This builder.
//      */
//    public Builder clearEntityId() {
//      entityId = null;
//      fieldSetFlags()[0] = false;
//      return this;
//    }
//
//    /**
//      * Gets the value of the 'firstName' field.
//      * @return The value.
//      */
//    public CharSequence getFirstName() {
//      return firstName;
//    }
//
//
//    /**
//      * Sets the value of the 'firstName' field.
//      * @param value The value of 'firstName'.
//      * @return This builder.
//      */
//    public Builder setFirstName(CharSequence value) {
//      validate(fields()[1], value);
//      this.firstName = value;
//      fieldSetFlags()[1] = true;
//      return this;
//    }
//
//    /**
//      * Checks whether the 'firstName' field has been set.
//      * @return True if the 'firstName' field has been set, false otherwise.
//      */
//    public boolean hasFirstName() {
//      return fieldSetFlags()[1];
//    }
//
//
//    /**
//      * Clears the value of the 'firstName' field.
//      * @return This builder.
//      */
//    public Builder clearFirstName() {
//      firstName = null;
//      fieldSetFlags()[1] = false;
//      return this;
//    }
//
//    /**
//      * Gets the value of the 'surname' field.
//      * @return The value.
//      */
//    public CharSequence getSurname() {
//      return surname;
//    }
//
//
//    /**
//      * Sets the value of the 'surname' field.
//      * @param value The value of 'surname'.
//      * @return This builder.
//      */
//    public Builder setSurname(CharSequence value) {
//      validate(fields()[2], value);
//      this.surname = value;
//      fieldSetFlags()[2] = true;
//      return this;
//    }
//
//    /**
//      * Checks whether the 'surname' field has been set.
//      * @return True if the 'surname' field has been set, false otherwise.
//      */
//    public boolean hasSurname() {
//      return fieldSetFlags()[2];
//    }
//
//
//    /**
//      * Clears the value of the 'surname' field.
//      * @return This builder.
//      */
//    public Builder clearSurname() {
//      surname = null;
//      fieldSetFlags()[2] = false;
//      return this;
//    }
//
//    /**
//      * Gets the value of the 'emailAddress' field.
//      * @return The value.
//      */
//    public CharSequence getEmailAddress() {
//      return emailAddress;
//    }
//
//
//    /**
//      * Sets the value of the 'emailAddress' field.
//      * @param value The value of 'emailAddress'.
//      * @return This builder.
//      */
//    public Builder setEmailAddress(CharSequence value) {
//      validate(fields()[3], value);
//      this.emailAddress = value;
//      fieldSetFlags()[3] = true;
//      return this;
//    }
//
//    /**
//      * Checks whether the 'emailAddress' field has been set.
//      * @return True if the 'emailAddress' field has been set, false otherwise.
//      */
//    public boolean hasEmailAddress() {
//      return fieldSetFlags()[3];
//    }
//
//
//    /**
//      * Clears the value of the 'emailAddress' field.
//      * @return This builder.
//      */
//    public Builder clearEmailAddress() {
//      emailAddress = null;
//      fieldSetFlags()[3] = false;
//      return this;
//    }
//
//    /**
//      * Gets the value of the 'clientType' field.
//      * @return The value.
//      */
//    public Object getClientType() {
//      return clientType;
//    }
//
//
//    /**
//      * Sets the value of the 'clientType' field.
//      * @param value The value of 'clientType'.
//      * @return This builder.
//      */
//    public Builder setClientType(Object value) {
//      validate(fields()[4], value);
//      this.clientType = value;
//      fieldSetFlags()[4] = true;
//      return this;
//    }
//
//    /**
//      * Checks whether the 'clientType' field has been set.
//      * @return True if the 'clientType' field has been set, false otherwise.
//      */
//    public boolean hasClientType() {
//      return fieldSetFlags()[4];
//    }
//
//
//    /**
//      * Clears the value of the 'clientType' field.
//      * @return This builder.
//      */
//    public Builder clearClientType() {
//      clientType = null;
//      fieldSetFlags()[4] = false;
//      return this;
//    }
//
//    /**
//      * Gets the value of the 'currentRents' field.
//      * @return The value.
//      */
//    public int getCurrentRents() {
//      return currentRents;
//    }
//
//
//    /**
//      * Sets the value of the 'currentRents' field.
//      * @param value The value of 'currentRents'.
//      * @return This builder.
//      */
//    public Builder setCurrentRents(int value) {
//      validate(fields()[5], value);
//      this.currentRents = value;
//      fieldSetFlags()[5] = true;
//      return this;
//    }
//
//    /**
//      * Checks whether the 'currentRents' field has been set.
//      * @return True if the 'currentRents' field has been set, false otherwise.
//      */
//    public boolean hasCurrentRents() {
//      return fieldSetFlags()[5];
//    }
//
//
//    /**
//      * Clears the value of the 'currentRents' field.
//      * @return This builder.
//      */
//    public Builder clearCurrentRents() {
//      fieldSetFlags()[5] = false;
//      return this;
//    }
//
//    @Override
//    @SuppressWarnings("unchecked")
//    public Client build() {
//      try {
//        Client record = new Client();
//        record.entityId = fieldSetFlags()[0] ? this.entityId : (java.util.UUID) defaultValue(fields()[0]);
//        record.firstName = fieldSetFlags()[1] ? this.firstName : (CharSequence) defaultValue(fields()[1]);
//        record.surname = fieldSetFlags()[2] ? this.surname : (CharSequence) defaultValue(fields()[2]);
//        record.emailAddress = fieldSetFlags()[3] ? this.emailAddress : (CharSequence) defaultValue(fields()[3]);
//        record.clientType = fieldSetFlags()[4] ? this.clientType :  defaultValue(fields()[4]);
//        record.currentRents = fieldSetFlags()[5] ? this.currentRents : (Integer) defaultValue(fields()[5]);
//        return record;
//      } catch (org.apache.avro.AvroMissingFieldException e) {
//        throw e;
//      } catch (Exception e) {
//        throw new org.apache.avro.AvroRuntimeException(e);
//      }
//    }
//  }
//
//  @SuppressWarnings("unchecked")
//  private static final org.apache.avro.io.DatumWriter<Client>
//    WRITER$ = (org.apache.avro.io.DatumWriter<Client>)MODEL$.createDatumWriter(SCHEMA$);
//
//  @Override public void writeExternal(java.io.ObjectOutput out)
//    throws java.io.IOException {
//    WRITER$.write(this, SpecificData.getEncoder(out));
//  }
//
//  @SuppressWarnings("unchecked")
//  private static final org.apache.avro.io.DatumReader<Client>
//    READER$ = (org.apache.avro.io.DatumReader<Client>)MODEL$.createDatumReader(SCHEMA$);
//
//  @Override public void readExternal(java.io.ObjectInput in)
//    throws java.io.IOException {
//    READER$.read(this, SpecificData.getDecoder(in));
//  }
//
//}
//
//
//
//
//
//
//
//
//
//
